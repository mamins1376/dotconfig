#!/bin/bash
# -*- coding: utf-8 -*-
# vim: fenc=utf-8 ts=4 noet sw=4 sts=4 ft=sh tw=80

# bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
	*i*) ;;
	*) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=-1
HISTFILESIZE=-1

# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

shopt -s nullglob

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

### Alias definitions.
# exa
alias exa='exa -F --group-directories-first'
alias e='exa -x'
alias ee='exa -l'
alias ea='ee -a'
alias et='e -T'

# ls
alias ls='ls -CF --group-directories-first --color=auto'
alias l='ls -x'
alias ll='ls -l'
alias la='ls -A'

# grep
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# shell modification
alias cd..='cd ..'
alias cd-='cd -'

alias hclock='hledger -f $TIMECLOCK_FILE'

# python virtual environment
#alias venv='python -m venv'
#alias act='. bin/activate'
#alias deact='deactivate'
#alias react='deactivate; activate'

### Utility functions

tx() {
	# the common part of 'ti' and 'to' is this function.
	# $1: this string should not be at the beginning of timeclock file's last
	#     line. used to abort double 'ti'/'to's. 
	# $2: string to append to the timeclock file
	# $3: if given, is the group or account name. will be checked for explicit
	#     declaration in order to avoid using unknown names by mistake.

	last_line="$(tail -n 1 "$TIMECLOCK_FILE")"
	if test $? -ne 0
	then return 1
	fi

	if test "${last_line:0:${#1}}" = "$1"
	then return 2
	fi

	if test "$3"
	then
		while read tx_line
		do
			if test "; account " != "${tx_line:0:10}"
			then continue
			fi
			tx_line=($tx_line)
			tx_accounts="$tx_accounts ${tx_line[2]}"
		done <"$TIMECLOCK_FILE"
		unset tx_line

		tx_not_found=true
		for tx_account in $tx_accounts
		do
			if test "$3" = $tx_account
			then 
				tx_not_found=false
				break
			fi
		done

		if $tx_not_found
		then
			echo -e "error: invalid account name: $3\n\nvalid names are:" >&2
			for tx_account in $tx_accounts
			do echo -e "Â· $tx_account" >&2
			done

			unset tx_not_found tx_accounts tx_account

			return 3
		fi

		unset tx_not_found tx_accounts tx_account
	fi

	echo -e "$2" >>"$TIMECLOCK_FILE"
}

td() {
	date '+%Y-%m-%d %H:%M:%S'
}

ti() {
	if test $# -eq 0
	then
		echo -e "usage: $FUNCNAME GROUP [DESCRIPTIONS...]\n" >&2
		return 1
	fi

	if test $# -gt 1
	then tx 'i ' "\ni $(td) $1  ${*:2}" "$1"
	else tx 'i ' "\ni $(td) $1" "$1"
	fi
}

to() {
	if test $# -ne 0
	then
		echo -e "error: '$FUNCNAME' takes no arguments.\n" >&2
		return 1
	fi

	tx 'o ' "o $(td)"
}

try() {
	while ! sh -c "$(echo "$@")"
	do sleep 0.1
	done
}

ffanal() {
	ffplay -volume 20 -fs -f lavfi "amovie=$1, asplit [a][out1]; [a] showcqt=s=1366x768:rate=60:count=4 [out0]"
}

fffreq() {
	ffplay -volume 20 -fs -f lavfi "amovie=$1, asplit [a][out1]; [a] showspectrum=s=1366x768:slide=replace:color=plasma:fps=40:scale=log:fscale=log:win_func=blackman:gain=0.75 [out0]"
}

sleep_until() {
	SECS=$(($(date -d "$1" +%s) - $(date +%s)))
	if [ $SECS -lt 0 ]
	then echo specified moment is in the past
	return 1
	fi
	echo waiting for $SECS seconds
	sleep $SECS
}

# command-not-found
CNFSRC=/usr/share/doc/pkgfile/command-not-found.bash
if [ -f ${CNFSRC} ]
then . ${CNFSRC}
fi
unset CNFSRC

eval "$(starship init bash)"

# nvm + completion
if ! command -v nvm >/dev/null
then [ -f $NVM_DIR/nvm.sh ] && . $NVM_DIR/nvm.sh
[ ! -f $NVM_DIR/bash_completion ] || . $NVM_DIR/bash_completion
fi
